function param_str = tomoman_gctf_parser(gctf_param)
%% tomoman_gctf_parser
% A function to parse input arguments for gctf and generate a proper
% parameter string. If no arguments are given, either defaults are set or
% they are not added to the argument. 
%
% WW 04-2018

%% Initialize fields

fields = {'apix','req','';...
          'kV','req','300';...
          'cs','req','2.7';...
          'ac','req','0.1';...
          'phase_shift_L','nrq','0.0';...
          'phase_shift_H','nrq','180.0';...
          'phase_shift_S','nrq','10.0';...
          'phase_shift_T','nrq','1';...
          'dstep','nrq','14.0';...
          'defS','nrq','500';...
          'astm','nrq','1000';...
          'bfac','nrq','150';...
          'resL','nrq','50';...
          'resH','nrq','4';...
          'boxsize','nrq','1024';...
          'do_EPA','nrq','0';...
          'EPA_oversmp','nrq','4';...
          'overlap','nrq','0.5';...
          'convsize','nrq','85';...
          'do_Hres_ref','nrq','0';...
          'Href_resL','nrq','15.0';...
          'Href_resH','nrq','4.0';...
          'Href_bfac','nrq','50';...
          'B_resL','nrq','15.0';...
          'B_resH','nrq','6.0';...
          'do_mdef_refine','nrq','0';...
          'mdef_aveN','nrq','1';...
          'mdef_fit','nrq','0';...
          'mdef_ave_type','nrq','0';...
          'refine_input_ctf','nrq','0';...
          'input_ctfstar','nrq','none';...
          'defU_init','nrq','20000.0';...
          'defV_init','nrq','20000.0';...
          'defA_init','nrq','0.0';...
          'B_init','nrq','200.0';...
          'defU_err','nrq','500.0';...
          'defV_err','nrq','500.0';...
          'defA_err','nrq','15.0';...
          'B_err','nrq','50.0';...
          'do_validation','nrq','0';...
          'ctfout_resL','nrq','100.0';...
          'ctfout_resH','nrq','';...
          'ctfout_bfac','nrq','50';...
          'input_ctfstar','nrq','micrographs_input_ctf.star';...
          'boxsuffix','nrq','_automatch.star';...
          'ctfstar','nrq','micrographs_all_gctf.star';...
          'logsuffix','nrq','_gctf.log';...
          'write_local_ctf','nrq','0';...
          'plot_res_ring','nrq','1';...
          'do_unfinished','nrq','';...
          'skip_check_mrc','nrq','';...
          'skip_check_gpu','nrq','';...
          'gid','nrq','0';...
          };

n_fields = size(fields,1);
      
%% Parse input

% Cell array to hold each argument
parameters = cell(n_fields,1);

for i = 1:n_fields

    % Check if field is empty or not written
    if ~isfield(gctf_param,fields{i,1})
        empty = true;
    elseif isempty(gctf_param.(fields{i,1}))
        empty = true;
    else
        empty = false;
    end


    if empty && strcmp(fields{i,2},'req')
        % If empty and required..

        if ~isempty(fields{i,3})
            % Set parameter from default
            parameters{i} = [' --',fields{i,1},' ',fields{i,3}];

        else
            error(['ACHTUNG!!! ',fields{i,1},' is a required parameter!!!']);
        end

    elseif ~empty          

        if isnumeric(gctf_param.(fields{i,1}))
            parameters{i} = [' --',fields{i,1},' ',num2str(gctf_param.(fields{i,1}))];
        else              
            parameters{i} = [' --',fields{i,1},' ',gctf_param.(fields{i,1})];
        end
    end
end

%% Check for sets of options

% Check for phase shift determination
if ~gctf_param.determine_pshift  
    parameters(4:8) = [];
end

% Check for EPA
if ~gctf_param.do_EPA
    parameters(16:19) = [];
end

% Check for high-res refienment
if ~gctf_param.do_Hres_ref
    parameters(20:23) = [];
end

% Check for movie defocus refinement
if ~gctf_param.do_mdef_refine
    parameters(26:29) = [];
end

% Check for refine input ctf
if ~gctf_param.refine_input_ctf
    parameters(30:39) = [];
end

% Generate parameter string              
param_str = [parameters{:}];
  
  
  
  
  
  
  
